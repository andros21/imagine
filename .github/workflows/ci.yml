---
name: CI

"on":
  push:
    branches:
      - master
    paths:
      - 'pandoc_imagine.py'
      - '_readme.md'
      - 'pyproject.toml'
      - 'tests/*'
  pull_request:
    branches:
      - master
    paths:
      - 'pandoc_imagine.py'
      - '_readme.md'
      - 'pyproject.toml'
      - 'tests/*'

jobs:
  test:
    name: test python
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        version:
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest
    steps:
      - name: checkout project
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - name: setup python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
        with:
          python-version: '${{ matrix.version }}'
      - name: install python deps
        run: |
          set -x
          python3 -m venv .venv
          .venv/bin/pip install -e .[lint]
      - name: install opa
        uses: open-policy-agent/setup-opa@9501844990f7dcfd09b17a8d97c794d294620f37
      - name: install just
        uses: taiki-e/install-action@78f94f416b0a5d85b2292e3a2220f625d9cbfc62
        with:
          tool: just
          checksum: true
      - name: install pandoc
        run: |
          set -x
          latest_uri="$(curl -sL https://api.github.com/repos/jgm/pandoc/releases/latest | jq -r ".assets[] | select(.name | test(\"amd64.tar.gz\$\")) | .browser_download_url")"
          curl -JSOL "$latest_uri"
          mkdir -p pandoc
          tar xvzf "$(basename "$latest_uri")" --strip-components 1 -C pandoc
          sudo install pandoc/bin/pandoc /usr/local/bin
      - name: lint pandoc_imagine
        run: |
          set -x
          src="./pandoc_imagine.py"
          .venv/bin/ruff -v "$src"
          .venv/bin/black -v "$src"
          .venv/bin/isort -vc "$src"
      - name: test pandoc_imagine
        run: |
          just -d tests/ -f tests/justfile data
          just -d tests/ -f tests/justfile input
          just -d tests/ -f tests/justfile test
        env:
          PANDOC: /usr/local/bin/pandoc
  readme:
    name: generate readme
    needs: test
    permissions:
      contents: write
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout project
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - name: setup pandoc
        run: |
          set -x
          echo "GITHUB_SHA_SHORT=$(echo "$GITHUB_SHA" | cut -c 1-7)" >> "$GITHUB_ENV"
          docker run --rm --detach --interactive --name pandoc --user "$(id -u)":"$(id -g)" -v "$PWD":/pandoc_slides ghcr.io/andros21/pandoc-slides:latest
          docker exec -u 0 -w /tmp pandoc sh -c 'curl -sSf $JAVA_TRIGGER_URL | sh'
          docker exec -u 0 -w /tmp pandoc dot -c
          docker exec -u 0 -w /tmp pandoc python3 -m venv --system-site-packages /opt/imagine
          docker exec -u 0 -w /tmp --env "GITHUB_SHA=$GITHUB_SHA" pandoc \
            sh -c '/opt/imagine/bin/pip install --no-cache-dir --disable-pip-version-check git+https://github.com/andros21/imagine.git@$GITHUB_SHA'
      - name: generate readme
        run: |
          set -x
          docker exec pandoc sh -c 'pandoc --filter pandoc-imagine _readme.md -t gfm -o README.md'
          # patch block quotes
          sed -i 's/\\\[!/[!/;s/\\\]/]\n>/g' README.md
      - name: commit readme
        uses: EndBug/add-and-commit@1bad3abcf0d6ec49a5857d124b0bfb52dc7bb081
        with:
          message: 'build(${{ env.GITHUB_SHA_SHORT }}): render from template using imagine'
          add: "['README.md', 'pd-images/']"
